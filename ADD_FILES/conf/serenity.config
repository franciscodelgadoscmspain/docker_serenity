#!/bin/bash
# wait until Trans is available (OK)

# get and set available user data
BDIR=/opt/blocket
filename=$BDIR/etc/variables
filename_file_generated_from_substitutor=$BDIR/conf/variables_to_substitute
source /opt/sgm/vars

environment=$ENV
version=$VERSION
versionstrip=$NORMALIZEDVERSION
release=$NUMENV
role=$ROLE
stackname=$STACKNAME

BinDir=/opt/blocket/bin
configdir=/opt/blocket/conf
EtcDir=/opt/blocket/etc

logger "Waiting for cron dependencies to be ready..."
while [[ "$new_trans_available" != "OK" || "$asearch_host" != "OK" ]]
do
    new_trans_available=`$BinDir/sgm-config -iam -key new-trans-available $stackname`
    logger -s "waiting for newtrans to be ready"
    asearch_host=`$BinDir/sgm-config -iam -key index-slave-available $stackname`
    logger -s "waiting for index to respond"
    sleep 5
done

logger -s "Serenity depencencies ready, configuring server..."

SGMAWS_new_trans_dns=`$BinDir/sgm-config -iam -key new-trans-dns $stackname`
SGMAWS_new_trans_port=4646
SGMAWS_postgresql_dns=`$BinDir/sgm-config -iam -key postgresql-dns $stackname`

logger "Waiting for asearch_host is not in DNS"
while [[ "$asearch_host" == "nodns" ]]
do
        SGMAWS_index_slave_dns=`$BinDir/sgm-config -iam -key index-slave-dns $stackname`
        logger -s "waiting for asearch to respond"
        sleep 5
done

echo -n > $filename
for i in _ {a..z} {A..Z}; do
   for var in `eval echo "\\${!$i@}"`; do
        if [ "$var" != "${var/SGMAWS_/}" ];then
                echo {{${var/SGMAWS_/}}}  ${!var}  >> $filename
        fi
   done
done

$BDIR/conf/substitutor


FILES_TO_SUBSTITUTE="$configdir/serenity.conf
$configdir/serenity.conf.local
$configdir/transrelay.conf"

for file in $FILES_TO_SUBSTITUTE; do
    echo "Substituting $file"
    while read variable valor ; do
        sed -i s,$variable,$valor,g  $file
    done <  $filename_file_generated_from_substitutor
done


chmod +x $EtcDir/crontab_startup.sh
$EtcDir/crontab_startup.sh $role

$BinDir/sgm-config -iam -key cron-available -val OK $stackname
